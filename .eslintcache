[{"/Users/taylortorres/Downloads/react-mastermind 3/src/reportWebVitals.js":"1","/Users/taylortorres/Downloads/react-mastermind 3/src/components/ColorPicker/ColorPicker.js":"2","/Users/taylortorres/Downloads/react-mastermind 3/src/components/GuessPeg/GuessPeg.js":"3","/Users/taylortorres/Downloads/react-mastermind 3/src/App.js":"4","/Users/taylortorres/Downloads/react-mastermind 3/src/components/GameTimer/GameTimer.js":"5","/Users/taylortorres/Downloads/react-mastermind 3/src/components/GameBoard/GameBoard.js":"6","/Users/taylortorres/Downloads/react-mastermind 3/src/components/NewGameButton/NewGameButton.js":"7","/Users/taylortorres/Downloads/react-mastermind 3/src/components/GuessRow/GuessRow.js":"8"},{"size":362,"mtime":1606506096000,"results":"9","hashOfConfig":"10"},{"size":415,"mtime":1607032826000,"results":"11","hashOfConfig":"10"},{"size":189,"mtime":1607026643000,"results":"12","hashOfConfig":"10"},{"size":1893,"mtime":1607033503000,"results":"13","hashOfConfig":"10"},{"size":163,"mtime":1607025920000,"results":"14","hashOfConfig":"10"},{"size":418,"mtime":1607028428000,"results":"15","hashOfConfig":"10"},{"size":230,"mtime":1607033110000,"results":"16","hashOfConfig":"10"},{"size":612,"mtime":1607032413000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qcgzge",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/taylortorres/Downloads/react-mastermind 3/src/reportWebVitals.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/components/ColorPicker/ColorPicker.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/components/GuessPeg/GuessPeg.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/App.js",["36","37"],"// Add an import statement for the useState hook using the \"named import\" syntax\nimport { useState } from \"react\";\n\nimport './App.css';\nimport GameBoard from './components/GameBoard/GameBoard';\nimport ColorPicker from './components/ColorPicker/ColorPicker';\nimport GameTimer from './components/GameTimer/GameTimer';\nimport NewGameButton from './components/NewGameButton/NewGameButton';\n\nfunction App (){\n    const colors = ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD'];\n    \n\n    const [selColorIdx, setColorIdx] = useState(0);\n\n    const [gameState, setGameState] = useState({\n      guesses: [getNewGuess(), getNewGuess(), getNewGuess(), getNewGuess()],\n      code: genCode()\n    });\n\n\n    /* helper functions */\n\n    function genCode() {\n      return new Array(4).fill().map(() => Math.floor(Math.random() * colors.length));\n    }\n\n\n    function getNewGuess() {\n      return {\n        // code: [null, null, null, null],\n        code: [3, 2, 1, 0], // for testing purposes\n        score: {\n          perfect: 0,\n          almost: 0\n        }\n      };\n    }\n\n    function getWinTries() {\n      // if winner, return num guesses, otherwise 0 (no winner)\n      let lastGuess = gameState.guesses.length - 1;\n      return gameState.guesses[lastGuess].score.perfect === 4 ? lastGuess + 1 : 0;\n    }\n    \n    const winTries = getWinTries();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">R E A C T&nbsp;&nbsp;&nbsp;M A S T E R M I N D</header>\n        <div className=\"flex-h\">\n          <GameBoard colors={colors} guesses={gameState.guesses} />\n          <div>\n            <ColorPicker colors={colors} selColorIdx={selColorIdx} />\n            <GameTimer />\n            <NewGameButton />\n          </div>\n        </div>\n        <footer className=\"Footer\">{winTries ? `You Won in ${winTries} Guesses!` : 'Good Luck!'}</footer>\n      </div>\n    );\n}\n\nexport default App;","/Users/taylortorres/Downloads/react-mastermind 3/src/components/GameTimer/GameTimer.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/components/GameBoard/GameBoard.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/components/NewGameButton/NewGameButton.js",[],"/Users/taylortorres/Downloads/react-mastermind 3/src/components/GuessRow/GuessRow.js",["38"],"import GuessPegs from '../GuessPegs/GuessPegs';\nimport GuessScore from '../GuessScore/GuessScore';\nimport ScoreButton from '../ScoreButton/ScoreButton';\nimport styles from './GuessRow.module.css';\n\nconst GuessRow = (props) => (\n  <div className='flex-h' className={styles.GuessRow}>\n\t\t<div style={{color: props.currentGuess ? 'black' : 'lightgrey'}}>\n\t\t\t{props.rowIdx + 1}\n\t\t</div>\n    <GuessPegs \n      colors={props.colors}\n      code={props.guess.code}\n    />\n    {\n      props.currentGuess \n      ? <ScoreButton />\n      : <GuessScore score={props.guess.score} />\n    }\n  </div>\n);\n\nexport default GuessRow;\n",{"ruleId":"39","severity":1,"message":"40","line":14,"column":25,"nodeType":"41","messageId":"42","endLine":14,"endColumn":36},{"ruleId":"39","severity":1,"message":"43","line":16,"column":23,"nodeType":"41","messageId":"42","endLine":16,"endColumn":35},{"ruleId":"44","severity":1,"message":"45","line":7,"column":27,"nodeType":"46","endLine":7,"endColumn":54},"no-unused-vars","'setColorIdx' is assigned a value but never used.","Identifier","unusedVar","'setGameState' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]